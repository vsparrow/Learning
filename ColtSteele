Chrome:
  inspector: make changes to webpage without affecting actual file. look at other people's code. 
  magnifying glas: hover over things: upper left

Sublime :
  boilerplate:  type html, hit tab, the boilerplate appears.
  comment       on line hit ctrl+/  will comment whole line
  lorem         type lorem, hit tab, a lorem ipsum appears
  multiedit     control+click multiple lines: same text written all over lines same time!
HTML
  BOILERPLATE : what you use to start webpage
  FORMS: <form></form> a container where we put our inputs : useful if submit all inputs as package together
    action:  where the form submits data to : if not specified it ge to same place/page you are on
    method:  what http method (get/post) : if not specified it is a get request
    validations: input must match a certain pattern 
      required <input type=""  required> :: must be filled, a presencevalidation
    INPUTS
    dropdowns: <select name=""><option></option></select>
    inputs  <input type="" >   search mdn input for input types. 
    label  <label>Username: <input type=""></label>  used for screen readres and accessibility (nested)
      alternative: <label for="password"></label>  <input id="password">  for and id match (unnested)
    length: minimum : use <input pattern=".{5,10}">  means must be 5 to 10 characters  
    name  <input type="" name=""> give names to data so we can retrieve them later
    placeholder <input type="" placeholder="username">  light gray text that is a placeholder text in input
    radio buttons: <input type="radio">   for choice, ie: pick 1 of 2, both input have the same name attribte
      differentiate choice with value=""
    submit button can be input type or a button!  if button last item in form it will submit form even if action not specified
    textarea: inputs more than a line : see mdn textarea  <textarea name="paragraph" rows="10" cols="20">
  REFERENCE
    mdn html reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element
  ELEMENTS : HTML5 needs to be meaning ful say something about the text
    <b></b> depricated: 
      <strong></strong>  use this instead.
    <table></table>
      <thead> table head  <tbody> table body  <th> table head item <tr> table row <td> row item
BOOTSTRAP      
  http://getbootstrap.com/css  //see sidebar for quick code
  responsivnes on mobile: <meta name="viewport" content="width=device-width, initial-scale=1"> add above <title> in head
  COLORS:
    if your CSS color isnt working, make sure that the style is included AFTER bootstrap.
  Download: bootstrap.css the important file
    jquery CDN must come before bootstrap CDN
  Override: override bootstrp styles by placing desired config in style in head after bootstrap called or style sheet called after bs 
    <style>.btn-danger{color: orange}</style> //change button !
  
  container: make a container with some spacing around it.
  forms: 
    .form-control: make form look good.
    .form-group: group labels and input that should go together
    .help-block: for help text
  grid: dont have to make new rows when going beyond 12, it will start in next row
    ex: can have 9 cols of col-lg-4 in 1 row, it will auto size to 3 rows. (automatic wrap)
  
  images:
    wrap in a thumnail <div class="col-lg-6"><div class="thumbnail">>img src=""></div></div>
  
  Jumbtron: mean to take up all space that it is inside of
  Navbar : class="navbar navbar-default"
    navbar-brand: usualy an anchor tag that takes you back to the company homepage
      inside navbar-header
    outside navbar-header: the content of navbar (nav navbar-nav)  
    hamburger: div class="navbar-collapse collapse"  // hides items in mobile sizing
      then copyfrom getbootstrap :: button navbar-collapsed toggle, place in header 
        data target in button must match id of collapse element (div) 
    Colt's work flow is he goes to getbootstrap or old project to get navbar code then edits it   
    navbar-fixed-top to keep at top
    Items grouped closer vs taking up whole space
      <nav class="navbar navbar-default">  <div class="container"> vs <div class="container-fluid">
  
      
CSS seperate documents that we then include in our HTML
  in HTML  style: in <head> add <style type="text/css>selector {property: value;}</style>  (THIS IS NOT THE RIGHT WAY)
    better way: linktag: <link rel="stylesheet" type="css/text" href="app.css"> in head
  background imanges body {background: url(http://www.cool.com/123smooth.jpg)} 
    strech image:  h1 {background-size: cover}
    tiled is default
    untiled:  h1{background-repeat: no-repeat}  //add to above
  borders: 3 parts width , color, style(solid, dashed, dotted)  // need all three too see something
    h1 {border: 10px dotted green;}//  can write seperate or combine as such
    shadow:  hr {width: 400px; border-top: 1px solid #f8f8f8;  border-bottom: 1px solid rgba(0,0,0,0.2);}
      thats how to make a small shadow, very very small!
  BOX MODEL:
    content: margin(border(padding(element))))
      padding: space between the element and its border
      content: border: 
      margin: add space in between elements
        margin-auto: center an element for us.
    
  COLORS: 
    hexadecimal : #ABC456 6 digit alphanumeric color pallete  0-9A-F   is rgb, but different syntax
      _ _ | _ _ | _ _    <- how much red | green | blue  
    named colors: only 147 named colors
    RGB system  color: rgb(255,255,255)    red green blue amount
    RGBA rgb but with an alpha(transparancy) signal   ex: h1 {color: rgba(255,255,255,.5)}  A is 0 to 1
  FONTS
    choose a font:  p { font-family: "Arial";}
    cssfontstack.com : see what  percentage of computers has a particular font. (the system fonts)
    custom fonts: palce in head.
      for google fonts: Navigate to https://fonts.google.com/ :: request only weight needed to make it faster
        family=Indie+Flower  use as h1 {font-family: Indie Flower;}
    font size:  px or em
      em: it is dynamic :: em is equal to the size of the font that applies to the parent of the element
        browser default,  often 16px.  by default 1em = 16px, and 2em = 32px. if parent 20px, em is 20px, 2em is 40px
          can also use floats: 0.75em
      rem: relative to root element unlike em. 
        ie: if body is 2rem, and div is 2rem, they are same size
            if body is 2em and div is 2em, body is 2x as big relative to page, and div inside body is 4x as big relative to page
    font-weight: depending on fon can be 100-800, in 100 increments.   
      to bold should be high like font-weight: 700
    line-height: line spacing, usually from .5 to 2
    text-align: left right center
    text-decoration: underline,striketrhough, overline    
  IMAGES:
    when added in html, automatically white space between two images.
    float: img {float: left}  //removes the whitespace between items
    background imaages
          body {background: url(http://imageurl); background-size: cover; background-position: center}
  SELECTOR:
    select element by type, ie: <p> <div> body, etc  example div {background: purple;}
    selectors are: 
      element li {},p {}  , 
      class .hello{}  , 
      id  #div1 {} , 
      start * {} selects everything on page
      descendent, chaining tag names  li a  {}  :: all anchor tags of li in this example
      adjacent , select sibling elements: h4 + ul {}  :: ul that is adjacent to h4, without plus it would be li inside h4
      attribute , a[href="http://www.google.com"] {} or input[type="checkbox"]{} //  anchor tag, inside the attribute we look for
      nth of type: takes number and does every nth of that type, ie, every 3rd li li:nth-of-type(3){}
        note: the example would do every 3rd li of every ul, NOT every other 3:
          meaning: if ul1 has 3 li, and ul2 has 6li,  in ul2 li3 would be affected but NOT li6
    list of selectors : https://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048
    select two selectors : h1,h3 {color: green} //2 selectors selected. the comma seperates groups
  SPECIFICITY: a weight that is applied to a given CSS declaration
    we can multiple styles targeting an element. whatever one is more specific wins. li wins over ul wins over body  
      when weight is equal last decleration wins      type (h1) < class (.example)  < id (#example) < !important
      :not exception // count as normal selectors  div:not(.outer) p { color: darkgreen} // div without class outer is darkgreen
      inline styles highest specificity
      2 elements more specific then 1.  // li + a{}  > li{}
    see mdn specificty
  
  TEXT: see also font
    text-decoration  mdn text-decoration   //add underline, cross through etc  
    text-shadow: shadow text
  
  width: 80% // can be pixel or percentage
    max-width: 700px: maximum something can be // see Colt059


DEVTIPS:
  Error driven development: we write something that we know wont work, then we fix it afterwards
  images: unsplash for images
